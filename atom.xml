<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[cat !$ >> blog]]></title>
  <link href="http://yaymukund.github.io/atom.xml" rel="self"/>
  <link href="http://yaymukund.github.io/"/>
  <updated>2014-03-02T20:44:02-05:00</updated>
  <id>http://yaymukund.github.io/</id>
  <author>
    <name><![CDATA[Mukund Lakshman]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ranked-model and uniqueness constraints]]></title>
    <link href="http://yaymukund.github.io/blog/2014/03/02/rankedmodel-and-uniqueness-constraints/"/>
    <updated>2014-03-02T00:00:00-05:00</updated>
    <id>http://yaymukund.github.io/blog/2014/03/02/rankedmodel-and-uniqueness-constraints</id>
    <content type="html"><![CDATA[<p>My new Rails project deals with tracks in a sorted playlist. To do this, I
used the <a href="https://github.com/mixonic/ranked-model">ranked-model gem</a> for Rails. It lets you order records by an
integer column.</p>

<figure class='code'><figcaption><span>app/models/track.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Track</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:playlist</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># `with_same` will scope the track numbers to the playlist.</span>
</span><span class='line'>  <span class="n">ranks</span> <span class="ss">:track_order</span><span class="p">,</span> <span class="n">with_same</span><span class="p">:</span> <span class="ss">:playlist_id</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

<p>I wanted database-level protection, so I added a Postgres uniqueness constraint:</p>

<figure class='code'><figcaption><span>db/migrate/20140217211534_create_tracks.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">CreateTracks</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>    <span class="c1"># ...</span>
</span><span class='line'>    <span class="n">reversible</span> <span class="k">do</span> <span class="o">|</span><span class="n">direction</span><span class="o">|</span>
</span><span class='line'>      <span class="n">direction</span><span class="o">.</span><span class="n">up</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">execute</span> <span class="o">&lt;&lt;-</span><span class="no">SQL</span>
</span><span class='line'><span class="sh">          ALTER TABLE tracks</span>
</span><span class='line'><span class="sh">            ADD CONSTRAINT index_tracks_on_playlist_id_and_track_order</span>
</span><span class='line'><span class="sh">            UNIQUE (playlist_id, track_order);</span>
</span><span class='line'><span class="no">        SQL</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">direction</span><span class="o">.</span><span class="n">down</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">execute</span> <span class="o">&lt;&lt;-</span><span class="no">SQL</span>
</span><span class='line'><span class="sh">          ALTER TABLE tracks</span>
</span><span class='line'><span class="sh">            DROP CONSTRAINT IF EXISTS index_tracks_on_playlist_id_and_track_order;</span>
</span><span class='line'><span class="no">        SQL</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

<p>Looks great! When I ran my tests, though, they failed:</p>

<figure class='code'><figcaption><span>rspec failure</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">FFFF</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="ss">Failures</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>  <span class="mi">1</span><span class="p">)</span> <span class="no">TracksController</span> <span class="no">POST</span> <span class="sr">/tracks creates a metadata</span>
</span><span class='line'><span class="sr">     Failure/</span><span class="ss">Error</span><span class="p">:</span> <span class="n">post</span> <span class="ss">:create</span><span class="p">,</span> <span class="ss">track</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>     <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:RecordNotUnique</span><span class="p">:</span>
</span><span class='line'>       <span class="ss">PG</span><span class="p">:</span><span class="ss">:UniqueViolation</span><span class="p">:</span> <span class="ss">ERROR</span><span class="p">:</span>  <span class="n">duplicate</span> <span class="n">key</span> <span class="n">value</span> <span class="n">violates</span> <span class="n">unique</span>
</span><span class='line'>       <span class="n">constraint</span> <span class="s2">&quot;index_tracks_on_playlist_id_and_track_order&quot;</span>
</span><span class='line'>       <span class="ss">DETAIL</span><span class="p">:</span>  <span class="no">Key</span> <span class="p">(</span><span class="n">playlist_id</span><span class="p">,</span> <span class="n">track_order</span><span class="p">)</span><span class="o">=</span><span class="p">(</span><span class="mi">27</span><span class="p">,</span> <span class="mi">8388606</span><span class="p">)</span> <span class="n">already</span> <span class="n">exists</span><span class="o">.</span>
</span><span class='line'>       <span class="p">:</span> <span class="no">UPDATE</span> <span class="s2">&quot;tracks&quot;</span> <span class="no">SET</span> <span class="n">track_order</span> <span class="o">=</span> <span class="n">track_order</span> <span class="o">-</span> <span class="mi">1</span> <span class="no">WHERE</span> <span class="s2">&quot;tracks&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span>
</span><span class='line'>       <span class="no">IN</span> <span class="p">(</span><span class="no">SELECT</span> <span class="s2">&quot;tracks&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="no">FROM</span> <span class="s2">&quot;tracks&quot;</span>  <span class="no">WHERE</span> <span class="s2">&quot;tracks&quot;</span><span class="o">.</span><span class="s2">&quot;playlist_id&quot;</span> <span class="o">=</span>
</span><span class='line'>       <span class="mi">27</span> <span class="no">AND</span> <span class="p">(</span><span class="s2">&quot;tracks&quot;</span><span class="o">.</span><span class="s2">&quot;track_order&quot;</span> <span class="o">&lt;=</span> <span class="mi">8388607</span><span class="p">)</span>  <span class="no">ORDER</span> <span class="no">BY</span>
</span><span class='line'>       <span class="s2">&quot;tracks&quot;</span><span class="o">.</span><span class="s2">&quot;track_order&quot;</span> <span class="no">ASC</span><span class="p">)</span>
</span><span class='line'>     <span class="c1"># ./app/controllers/tracks_controller.rb:6:in `create&#39;</span>
</span></code></pre></td></tr></table></div></figure>

<p>After banging my head a bit, I finally figured it out. Internally,
<code>ranked-model</code> sets <code>track_order_position</code> to some number between -8388607 and
8388607, the <code>MEDIUMINT</code> range in MySQL. This is all <a href="https://github.com/mixonic/ranked-model#internals">explained in the
ranked-model documentation</a>. It&rsquo;s a clever and
effective way to avoid constantly rearranging records.</p>

<p>Sometimes, it <em>does</em> need to rearrange records, though. When it does, it
calls <code>rearrange_ranks</code>:</p>

<figure class='code'><figcaption><span>lib/ranked-model/ranker.rb</span><a href='https://github.com/mixonic/ranked-model/blob/fad88ca2a31d804c4af083c8199c83ee5c5e5d48/lib/ranked-model/ranker.rb#L171-193'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">rearrange_ranks</span>
</span><span class='line'>  <span class="n">_scope</span> <span class="o">=</span> <span class="n">finder</span>
</span><span class='line'>  <span class="k">unless</span> <span class="n">instance</span><span class="o">.</span><span class="n">id</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>    <span class="c1"># Never update ourself, shift others around us.</span>
</span><span class='line'>    <span class="n">_scope</span> <span class="o">=</span> <span class="n">_scope</span><span class="o">.</span><span class="n">where</span><span class="p">(</span> <span class="n">instance_class</span><span class="o">.</span><span class="n">arel_table</span><span class="o">[</span><span class="n">instance_class</span><span class="o">.</span><span class="n">primary_key</span><span class="o">].</span><span class="n">not_eq</span><span class="p">(</span><span class="n">instance</span><span class="o">.</span><span class="n">id</span><span class="p">)</span> <span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">current_first</span><span class="o">.</span><span class="n">rank</span> <span class="o">&amp;&amp;</span> <span class="n">current_first</span><span class="o">.</span><span class="n">rank</span> <span class="o">&gt;</span> <span class="ss">RankedModel</span><span class="p">:</span><span class="ss">:MIN_RANK_VALUE</span> <span class="o">&amp;&amp;</span> <span class="n">rank</span> <span class="o">==</span> <span class="ss">RankedModel</span><span class="p">:</span><span class="ss">:MAX_RANK_VALUE</span>
</span><span class='line'>    <span class="n">_scope</span><span class="o">.</span>
</span><span class='line'>      <span class="n">where</span><span class="p">(</span> <span class="n">instance_class</span><span class="o">.</span><span class="n">arel_table</span><span class="o">[</span><span class="n">ranker</span><span class="o">.</span><span class="n">column</span><span class="o">].</span><span class="n">lteq</span><span class="p">(</span><span class="n">rank</span><span class="p">)</span> <span class="p">)</span><span class="o">.</span>
</span><span class='line'>      <span class="n">update_all</span><span class="p">(</span> <span class="sx">%Q{</span><span class="si">#{</span><span class="n">ranker</span><span class="o">.</span><span class="n">column</span><span class="si">}</span><span class="sx"> = </span><span class="si">#{</span><span class="n">ranker</span><span class="o">.</span><span class="n">column</span><span class="si">}</span><span class="sx"> - 1}</span> <span class="p">)</span>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">current_last</span><span class="o">.</span><span class="n">rank</span> <span class="o">&amp;&amp;</span> <span class="n">current_last</span><span class="o">.</span><span class="n">rank</span> <span class="o">&lt;</span> <span class="p">(</span><span class="ss">RankedModel</span><span class="p">:</span><span class="ss">:MAX_RANK_VALUE</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="n">rank</span> <span class="o">&lt;</span> <span class="n">current_last</span><span class="o">.</span><span class="n">rank</span>
</span><span class='line'>    <span class="n">_scope</span><span class="o">.</span>
</span><span class='line'>      <span class="n">where</span><span class="p">(</span> <span class="n">instance_class</span><span class="o">.</span><span class="n">arel_table</span><span class="o">[</span><span class="n">ranker</span><span class="o">.</span><span class="n">column</span><span class="o">].</span><span class="n">gteq</span><span class="p">(</span><span class="n">rank</span><span class="p">)</span> <span class="p">)</span><span class="o">.</span>
</span><span class='line'>      <span class="n">update_all</span><span class="p">(</span> <span class="sx">%Q{</span><span class="si">#{</span><span class="n">ranker</span><span class="o">.</span><span class="n">column</span><span class="si">}</span><span class="sx"> = </span><span class="si">#{</span><span class="n">ranker</span><span class="o">.</span><span class="n">column</span><span class="si">}</span><span class="sx"> + 1}</span> <span class="p">)</span>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">current_first</span><span class="o">.</span><span class="n">rank</span> <span class="o">&amp;&amp;</span> <span class="n">current_first</span><span class="o">.</span><span class="n">rank</span> <span class="o">&gt;</span> <span class="ss">RankedModel</span><span class="p">:</span><span class="ss">:MIN_RANK_VALUE</span> <span class="o">&amp;&amp;</span> <span class="n">rank</span> <span class="o">&gt;</span> <span class="n">current_first</span><span class="o">.</span><span class="n">rank</span>
</span><span class='line'>    <span class="n">_scope</span><span class="o">.</span>
</span><span class='line'>      <span class="n">where</span><span class="p">(</span> <span class="n">instance_class</span><span class="o">.</span><span class="n">arel_table</span><span class="o">[</span><span class="n">ranker</span><span class="o">.</span><span class="n">column</span><span class="o">].</span><span class="n">lt</span><span class="p">(</span><span class="n">rank</span><span class="p">)</span> <span class="p">)</span><span class="o">.</span>
</span><span class='line'>      <span class="n">update_all</span><span class="p">(</span> <span class="sx">%Q{</span><span class="si">#{</span><span class="n">ranker</span><span class="o">.</span><span class="n">column</span><span class="si">}</span><span class="sx"> = </span><span class="si">#{</span><span class="n">ranker</span><span class="o">.</span><span class="n">column</span><span class="si">}</span><span class="sx"> - 1}</span> <span class="p">)</span>
</span><span class='line'>    <span class="n">rank_at</span><span class="p">(</span> <span class="n">rank</span> <span class="o">-</span> <span class="mi">1</span> <span class="p">)</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">rebalance_ranks</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

<p>The details of this code aren&rsquo;t important, but notice that it sometimes
calls <code>update_all</code> to increment or decrement a group of records. This triggers
Postgres&rsquo;s uniqueness constraint and the record fails validation.</p>

<p>To fix this, we need to make the uniqueness constraint <em>deferrable</em>:</p>

<figure class='code'><figcaption><span>db/migrate/20140217211534_create_tracks.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">ALTER</span> <span class="no">TABLE</span> <span class="n">tracks</span>
</span><span class='line'>  <span class="no">ADD</span> <span class="no">CONSTRAINT</span> <span class="n">index_tracks_on_playlist_id_and_track_order</span>
</span><span class='line'>  <span class="no">UNIQUE</span> <span class="p">(</span><span class="n">playlist_id</span><span class="p">,</span> <span class="n">track_order</span><span class="p">)</span> <span class="no">DEFERRABLE</span> <span class="no">INITIALLY</span> <span class="no">IMMEDIATE</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>

<p>And then we actually need to defer the constraint when rearranging records:</p>

<figure class='code'><figcaption><span>app/models/track.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Track</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">before_save</span> <span class="ss">:defer_uniqueness_constraint_if_track_order_changed</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">defer_uniqueness_constraint_if_track_order_changed</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">new_record?</span> <span class="ow">or</span> <span class="n">track_order_changed?</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">execute</span> <span class="o">&lt;&lt;-</span><span class="no">SQL</span>
</span><span class='line'><span class="sh">        SET CONSTRAINTS</span>
</span><span class='line'><span class="sh">          index_tracks_on_playlist_id_and_track_order DEFERRED;</span>
</span><span class='line'><span class="no">      SQL</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

<p>And suddenly, all my tests passed. Hooray!</p>

<h2>References</h2>

<ul>
<li><a href="http://hashrocket.com/blog/posts/deferring-database-constraints">http://hashrocket.com/blog/posts/deferring-database-constraints</a></li>
<li><a href="https://github.com/mixonic/ranked-model">https://github.com/mixonic/ranked-model</a></li>
<li><a href="http://www.postgresql.org/docs/9.3/static/sql-set-constraints.html">http://www.postgresql.org/docs/9.3/static/sql-set-constraints.html</a></li>
</ul>
]]></content>
  </entry>
  
</feed>
